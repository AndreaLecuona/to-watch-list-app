{"version":3,"sources":["components/todoReducer.jsx","components/TodoListItem.jsx","components/TodoList.jsx","components/TodoAdd.jsx","hooks/useForm.jsx","components/TodoApp.jsx","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToggle","className","onClick","desc","TodoList","todos","i","TodoAdd","handleAdd","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cfb85fc.chunk.js","sourcesContent":["\r\nexport const todoReducer = (state = [], action) => {\r\n    \r\n    switch ( action.type ) {\r\n        //debe conocer de antemano todas las posibles 'acciones' que le mandemos\r\n        case 'add':\r\n            return [...state, action.payload];\r\n\r\n        case 'delete':\r\n            return state.filter( todo => todo.id !== action.payload); //action-payload toma el id\r\n\r\n        case 'toggle':\r\n            return state.map( todo => \r\n                ( todo.id === action.payload ) ? { ...todo, done: !todo.done } : todo\r\n            );\r\n\r\n        //VERSION LARGA DE TOGGLE\r\n        // case 'toggle':\r\n        //     return state.map( todo => {\r\n        //         if( todo.id === action.payload ){\r\n        //             return {\r\n        //                 ...todo,\r\n        //                 done: !todo.done\r\n        //             }\r\n        //         } else {\r\n        //             return todo;\r\n        //         }\r\n        //     })\r\n\r\n        default:\r\n            return state; //para asegurarnos que devuelva un state\r\n    }\r\n\r\n};","import React from 'react'\r\n\r\nexport const TodoListItem = ( { todo, index, handleDelete, handleToggle } ) => {\r\n    return (\r\n        <li\r\n            key={ todo.id }\r\n            className=\"list-item\"\r\n        >\r\n            <p \r\n                className={`${ todo.done && 'complete' }`}\r\n                onClick={() => handleToggle( todo.id )}>\r\n\r\n                    {index + 1}. { todo.desc }\r\n            </p>\r\n\r\n            <button \r\n                className=\"btn btn-danger personal-btn\"\r\n                onClick={() => handleDelete( todo.id )}>\r\n\r\n                    Borrar\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoListItem } from './TodoListItem'\r\n\r\nexport const TodoList = ( {todos, handleDelete, handleToggle} ) => {\r\n    return (\r\n        <ul className=\"list-movies\">\r\n            {\r\n                todos.map((todo, i) =>\r\n\r\n                    <TodoListItem\r\n                        key ={ todo.id }\r\n                        todo ={ todo }\r\n                        index ={ i }\r\n                        handleDelete = { handleDelete }\r\n                        handleToggle = { handleToggle }\r\n                    />\r\n\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useForm } from '../hooks/useForm'\r\n\r\nexport const TodoAdd = ( { handleAdd } ) => {\r\n\r\n    const [ { description }, handleInputChange, reset ] = useForm({\r\n        description: ''\r\n    })\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( description.trim().length <= 1 ) {\r\n            return\r\n        };\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        };\r\n\r\n        //reemplazo este dispatch con handle add para que el dispatch se haga en el componente padre\r\n        handleAdd( newTodo );\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            {/* <h4>Me falta ver...</h4> */}\r\n\r\n                <form onSubmit={ handleSubmit }>\r\n                    <input type=\"text\"\r\n                        name=\"description\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Nombre de la película\"\r\n                        autoComplete=\"off\"\r\n                        value={ description }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n\r\n                    <button type=\"submit\"\r\n                        className=\"btn btn-outline-primary personal-btn mt-3\">\r\n                        Agregar a la lista\r\n                    </button>\r\n                </form>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\n\r\n//extraemos la logica de las forms, que de otra forma se repetiría a lo largo de las secciones de una página\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ( { target } ) => {\r\n\r\n        setValues( {\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    };\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n};\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport { todoReducer } from './todoReducer';\r\n// import { useForm } from '../../hooks/useForm';\r\nimport { TodoList } from './TodoList';\r\nimport { TodoAdd } from './TodoAdd';\r\n\r\nimport './styles.css';\r\n\r\n//const [state, dispatch] = useReducer(reducer, initialState, init)\r\n//init: Es una funcion para inicializar el state en caso que éste sea procesado o haga varias acciones (retorna el initial state)\r\n//dispatch: Ayuda a \"disparar\"/enviar las acciones hacia el reducer para volver a renderizar en caso de haberse producido un cambio en el state\r\n\r\n\r\n// const initialState = [{\r\n//     id: new Date().getTime(),\r\n//     desc: \"Barry Lyndon - Stanley Kubrick\",\r\n//     done: false\r\n// }];\r\n\r\nconst init = () => {\r\n    //LEER DE LOCAL STORAGE Y MANDARLO COMO INITIAL STATE\r\n    return JSON.parse(localStorage.getItem( 'todos' )) || [];\r\n\r\n    // return(\r\n    //     [{\r\n    //         id: new Date().getTime(), //simulacion de id\r\n    //         desc: \"Barry Lyndon - Stanley Kubrick\",\r\n    //         done: false\r\n    //     }]\r\n    // )\r\n}\r\n\r\n\r\nexport const TodoApp = () => {\r\n\r\n    //Extraigo del resultado del reducer una lista de items\r\n    const [ todos, dispatch ] = useReducer(todoReducer, [], init);\r\n\r\n    //GUARDAR EN LOCAL STORAGE\r\n    //guardar en primer renderizado y cada vez que la lista cambie\r\n    useEffect(() => {\r\n        localStorage.setItem( 'todos', JSON.stringify( todos ) );\r\n    }, [todos]);\r\n\r\n    const handleDelete = (todoId) => {\r\n        console.log(todoId);\r\n\r\n        const action = {\r\n            type: 'delete',\r\n            payload: todoId\r\n        };\r\n\r\n        dispatch( action );\r\n    }\r\n\r\n    const handleToggle = (todoId) => {\r\n        dispatch( {\r\n            type: 'toggle',\r\n            payload: todoId\r\n        })\r\n    }\r\n\r\n    const handleAdd = ( newTodo ) => {\r\n\r\n        dispatch({\r\n            type: 'add',\r\n            payload: newTodo\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n\r\n            <div className=\"row both-sides\">\r\n\r\n                <div className=\"col-sm-12 col-lg-7\">\r\n                    <h1>Home cinema</h1>\r\n                    <h2>Quarantine edition</h2>\r\n\r\n                    <h3>Pelis por ver: { todos.length }</h3>\r\n                    \r\n                    <TodoAdd\r\n                    handleAdd={ handleAdd }\r\n                    />\r\n\r\n                </div>\r\n\r\n                <div className=\"col-sm-12 col-lg-5\">\r\n                    \r\n                    <TodoList\r\n                        todos={ todos }\r\n                        handleDelete={ handleDelete }\r\n                        handleToggle={ handleToggle }\r\n                    />\r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './components/TodoApp';\nimport './index.css';\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}